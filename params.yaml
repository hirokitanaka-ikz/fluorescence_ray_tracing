crystal:
  num_axes: 2             # number of individual optical axes, 1 -> isotropic, 2 -> uniaxial, 3 -> biaxial
  name: "YbYLF"           # name of crystal
  T: 110                  # temperature [K]
  n1: 1.45                # first refractive index, no in the case of crystal
  n2: 1.47                # second refractive index ne in the case of uniaxial crystal (not used for isotropic crystal)
  n3:                     # refractive index for E||c (or E||Z) (only used for biaxial crystal)
  doping_level: 10.0      # doping level [%]
  correction_coeff: 1.15  # correction coefficient for abs. coefficient (>1 if the actual abs. coefficient is larger than the values calculated using cross section and doping level)
  cation_density: 1.4e22  # cation density of host [cm^-3]
  baxis:                  # vector specifying b(or Y)-axis (only used for biaxial crystal)
  caxis: [1.0, 0.0, 0.0]  # vector specifying c(or Z)-axis (not used for isotropic crystal)
  shape: "cuboid"         # "cuboid" or "brewster". Brewster-cut assumes a beam propagating along z-axis
  angle: 90               # corner angle for reducing the symmetry of the crystal [deg.]
  W: 3.0                  # width (along x) [mm]
  H: 3.0                  # height (along y) [mm]
  L: 10.0                 # length (along z) [mm]
  QE: 0.996               # internal quantum efficiency
  alpha_b: 1.0e-4         # background absorption coefficient [cm^-1]
  alpha_s: 0.0            # scattering coefficient [cm^-1]

beam:
  distribution: "gauss"   # valid inputs: "gauss", "tophat"
  wl: 1020.0              # excitation wavelength
  k: [0.0, 0.0, 1.0]      # vector specifying the beam direction
  d: 0.5                  # beam diameter (1/e^2 in the case of gaussian beam)
  p0: [1.25, 1.25, 0.0]   # point where the beam passes
  E: [1.0, 0.0, 0.0]      # polarization

simulation:
  N: 1e5                  # number of simulated fluorescence rays
  step: 0.5               # step size in ray tracing [mm]
  max_ref_count: 0        # max reflection counts to stop ray tracing (0 => infinity)
  pump_depletion: true    # false => no pump depletion (uniform excitation), true => pump delete (Beer-Lambert law)
